#!/bin/sh

. /lib/functions.sh
. /lib/functions/network.sh
. /usr/share/libubox/jshn.sh

[ -x /sbin/swconfig -a -r /etc/board.json ] || exit 1

INTERVAL=2	# Sleep interval in Seconds
PREVSTATE=-1	# -1 = Don't Know, 0 = Down, 1 = Up
WAN=wan
DEV=
PHY=
SWITCH=
WANPORT=

wanLed="wan"

. /lib/functions/leds.sh

find_wan_port() {

	local key keys port ports device role num device found

	json_get_keys keys switch

	json_select switch
	
	for key in $keys; do
		json_select $key

		json_get_keys ports vlans
		json_select vlans
		
		found=0
		for port in $ports; do
			json_select "$port"
			json_get_var num "1"
			json_select ..

			[ "$port" = "$WAN" ] && found=1

			[ "$found" = "1"  ] && {
				WANPORT="$num"
				SWITCH="$key"
				json_select ..
				json_select ..
				json_select ..
				return
			}
		done
		json_select ..
		json_select ..
	done

	json_select ..
}

find_dev() {
	local key keys ifname

	json_get_keys keys network
	json_select network
	for key in $keys; do
		[ "$key" = "$WAN" ] && {
			json_select $key
			json_get_vars ifname
			DEV="$ifname"
			json_select ..
			break
		}
	done
	json_select ..
}

setup() {
	json_init
	json_load "$(cat /etc/board.json)"

	[ -z "$WAN" ] && network_find_wan WAN

	[ -z "$WAN" ] || {
		[ -z "$DEV" ] && find_dev
		[ -z "$PHY" ] && PHY=${DEV%.*}
		[ -z "$DEV" -o -z "$PHY" ] || find_wan_port
	}
}

watch() {
#logger "monitor connections on $WAN($DEV)"

	link=$(swconfig dev "$SWITCH" port "$WANPORT" get link)
	case "$link" in
	*"link:up"*)
		status_led=$wanLed
		status_led_on 
		;;
	*"link:down"*)
		status_led=$wanLed
		status_led_off 
		;;
	esac
	
	link=$(swconfig dev "$SWITCH" port "1" get link)
	case "$link" in
	*"link:up"*)
		status_led="lan"
		status_led_on 
		;;
	*"link:down"*)
		status_led="lan"
		status_led_off 
		;;
	esac
}

logger "Started Linkwatch"
while (/bin/true); do
	setup

	[ -z "$WAN" -o -z "$DEV" -o -z "$SWITCH" -o -z "$WANPORT" ] || watch

	echo wait
	sleep 2
done
